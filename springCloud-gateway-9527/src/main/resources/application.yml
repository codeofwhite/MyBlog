server:
  port: 9527
spring:
  application:
    name: springCloud-gateway-9527
  cloud:
    gateway:
      # 网关全局跨域配置
      #提示Access-Control-Allow-Origin头包含多个值，但只允许一个的情况，
      #通常是因为服务器响应中设置了多个Access-Control-Allow-Origin头。这可能是由于配置了全局CORS而同时在代码中也设置了CORS头，导致冲突。
      globalcors:
        cors-configurations:
          '[/**]':
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
            allowedOrigins: "*"
        # 解决options请求被拦截的问题
        add-to-simple-url-handler-mapping: true
      routes:
        - id: springCloud-provider-8001 #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #          使用了lb://前缀，这是因为假设服务已经注册到了服务发现组件（如Eureka）
          uri: lb://SPRINGCLOUD-PROVIDER-8001  #匹配后提供服务的路由地址
          predicates:
            - Path=/dept/**   #断言,路径相匹配的进行路由
        - id: spring-cloud-provider-8004
          uri: lb://SPRING-CLOUD-PROVIDER-8004
          predicates:
            - Path=/user/**
        - id: spring-cloud-provider-8005
          uri: lb://SPRING-CLOUD-PROVIDER-8005
          predicates:
            - Path=/blogs/**, /comments/**
        - id: spring-cloud-provider-8006
          uri: lb://SPRING-CLOUD-PROVIDER-8006
          predicates:
            - Path=/danmu/**
        - id: spring-cloud-provider-8007
          uri: lb://SPRING-CLOUD-PROVIDER-8007
          predicates:
            - Path=/questions/**, /gaveme/**, /photos/**

eureka:
  instance:
    prefer-ip-address: true
    hostname: cloud-gate9527
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka8002:8002/eureka/, http://eureka8003:8003/eureka/
